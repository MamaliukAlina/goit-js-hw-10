{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst datePicker = document.querySelector(\"#datetime-picker\");\nconst startButton = document.querySelector(\"[data-start]\");\nconst daysValue = document.querySelector(\"[data-days]\");\nconst hoursValue = document.querySelector(\"[data-hours]\");\nconst minutesValue = document.querySelector(\"[data-minutes]\");\nconst secondsValue = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\n// Customization Flatpickr\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datePicker, options);\n\n// Converting ms to days, hours, minutes, seconds\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor((ms % hour) / minute),\n    seconds: Math.floor((ms % minute) / second),\n  };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\n// update Timer Display\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysValue.textContent = addLeadingZero(days);\n  hoursValue.textContent = addLeadingZero(hours);\n  minutesValue.textContent = addLeadingZero(minutes);\n  secondsValue.textContent = addLeadingZero(seconds);\n}\n\n// start Countdown\nfunction startCountdown() {\n  if (!userSelectedDate) return;\n\n  startButton.disabled = true;\n  datePicker.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const now = new Date().getTime();\n    const timeLeft = userSelectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      datePicker.disabled = false;\n      iziToast.success({\n        title: \"Success\",\n        message: \"Countdown completed!\",\n        position: \"topRight\",\n      });\n      return;\n    }\n\n    updateTimerDisplay(convertMs(timeLeft));\n  }, 1000);\n}\n\n// Button EventListener\nstartButton.addEventListener(\"click\", startCountdown);\n"],"names":["datePicker","startButton","daysValue","hoursValue","minutesValue","secondsValue","userSelectedDate","countdownInterval","options","selectedDates","iziToast","flatpickr","convertMs","ms","addLeadingZero","value","updateTimerDisplay","days","hours","minutes","seconds","startCountdown","now","timeLeft"],"mappings":"0IAKA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EAAmB,KACnBC,EAAoB,KAGxB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAE9BH,GAAoB,IAAI,MAC1BI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAU,EAAUX,EAAYQ,CAAO,EAG7B,SAASI,EAAUC,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAOA,EAAK,KAAQ,GAAM,EACxC,QAAS,KAAK,MAAOA,EAAK,IAAU,GAAM,CAC9C,CACA,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASC,EAAmB,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DlB,EAAU,YAAcY,EAAeG,CAAI,EAC3Cd,EAAW,YAAcW,EAAeI,CAAK,EAC7Cd,EAAa,YAAcU,EAAeK,CAAO,EACjDd,EAAa,YAAcS,EAAeM,CAAO,CACnD,CAGA,SAASC,GAAiB,CACnBf,IAELL,EAAY,SAAW,GACvBD,EAAW,SAAW,GAEtBO,EAAoB,YAAY,IAAM,CACpC,MAAMe,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAWjB,EAAmBgB,EAEpC,GAAIC,GAAY,EAAG,CACjB,cAAchB,CAAiB,EAC/BS,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEhB,EAAW,SAAW,GACtBU,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,uBACT,SAAU,UAClB,CAAO,EACD,MACD,CAEDM,EAAmBJ,EAAUW,CAAQ,CAAC,CACvC,EAAE,GAAI,EACT,CAGAtB,EAAY,iBAAiB,QAASoB,CAAc"}